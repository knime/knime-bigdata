From 171f205d7175c7320e3281bc885944380ed87e07 Mon Sep 17 00:00:00 2001
From: Bjoern Lohrmann <bjoern.lohrmann@knime.com>
Date: Wed, 15 Jun 2016 16:52:53 +0200
Subject: [PATCH] publish patch

---
 project/Build.scala   | 20 ++++++++------------
 project/Release.scala |  2 +-
 project/plugins.sbt   |  2 +-
 3 files changed, 10 insertions(+), 14 deletions(-)

diff --git a/project/Build.scala b/project/Build.scala
index 9c26ef4..6d96f00 100644
--- a/project/Build.scala
+++ b/project/Build.scala
@@ -2,7 +2,7 @@ import scalariform.formatter.preferences._
 
 import sbt._
 import Keys._
-import bintray.BintrayKeys._
+//import bintray.BintrayKeys._
 import com.typesafe.sbt.SbtScalariform._
 import com.typesafe.sbt.SbtScalariform
 import sbtassembly.AssemblyPlugin.autoImport._
@@ -27,7 +27,7 @@ object JobServerBuild extends Build {
     settings = commonSettings ++ Seq(
       description := "Common Akka application stack: metrics, tracing, logging, and more.",
       libraryDependencies ++= coreTestDeps ++ akkaDeps
-    ) ++ publishSettings
+    ) // ++ publishSettings
   ).disablePlugins(SbtScalariform)
 
   lazy val jobServer = Project(id = "job-server", base = file("job-server"),
@@ -54,7 +54,7 @@ object JobServerBuild extends Build {
       // TODO: Remove this once we upgrade to Spark 1.4 ... see resolution of SPARK-5281.
       // Also: note that fork won't work when VPN is on or other funny networking
       fork in Test := true
-      ) ++ publishSettings
+    ) // ++ publishSettings
   ).dependsOn(akkaApp, jobServerApi).disablePlugins(SbtScalariform)
 
   lazy val jobServerTestJar = Project(id = "job-server-tests", base = file("job-server-tests"),
@@ -63,7 +63,7 @@ object JobServerBuild extends Build {
 
   lazy val jobServerApi = Project(id = "job-server-api",
                                   base = file("job-server-api"),
-                                  settings = commonSettings ++ publishSettings).disablePlugins(SbtScalariform)
+                                  settings = commonSettings).disablePlugins(SbtScalariform)// ++ publishSettings).disablePlugins(SbtScalariform)
 
   lazy val jobServerExtras = Project(id = "job-server-extras",
                                      base = file("job-server-extras"),
@@ -80,7 +80,7 @@ object JobServerBuild extends Build {
                   ).aggregate(jobServer, jobServerApi, jobServerTestJar, akkaApp, jobServerExtras).
                    dependsOn(jobServer, jobServerExtras).disablePlugins(SbtScalariform)
 
-  lazy val jobServerExtrasSettings = revolverSettings ++ Assembly.settings ++ publishSettings ++ Seq(
+  lazy val jobServerExtrasSettings = revolverSettings ++ Assembly.settings ++ Seq( //++ publishSettings ++ Seq(
     libraryDependencies ++= sparkExtraDeps,
     // Extras packages up its own jar for testing itself
     test in Test <<= (test in Test).dependsOn(packageBin in Compile)
@@ -184,7 +184,8 @@ object JobServerBuild extends Build {
     crossPaths   := true,
     crossScalaVersions := Seq("2.10.6","2.11.8"),
     scalaVersion := "2.10.6",
-    publishTo    := Some(Resolver.file("Unused repo", file("target/unusedrepo"))),
+    //publishTo    := Some(Resolver.file("Unused repo", file("target/unusedrepo"))),
+    publishTo := Some(Resolver.file("file",  new File(Path.userHome.absolutePath+"/.m2/repository"))),
     // scalastyleFailOnError := true,
     runScalaStyle := {
       org.scalastyle.sbt.ScalastylePlugin.scalastyle.in(Compile).toTask("").value
@@ -202,7 +203,7 @@ object JobServerBuild extends Build {
     libraryDependencies ++= apiDeps,
     parallelExecution in Test := false,
 
-    // We need to exclude jms/jmxtools/etc because it causes undecipherable SBT errors  :(
+    // We need to exclude jms/jmxtools/etc because it causes undecipherable SBT errors
     ivyXML :=
       <dependencies>
         <exclude module="jms"/>
@@ -218,11 +219,6 @@ object JobServerBuild extends Build {
     coverageExcludedPackages := ".+Benchmark.*"
   }
 
-  lazy val publishSettings = Seq(
-    licenses += ("Apache-2.0", url("http://choosealicense.com/licenses/apache/")),
-    bintrayOrganization := Some("spark-jobserver")
-  )
-
   // change to scalariformSettings for auto format on compile; defaultScalariformSettings to disable
   // See https://github.com/mdr/scalariform for formatting options
   lazy val scalariformPrefs = defaultScalariformSettings
diff --git a/project/Release.scala b/project/Release.scala
index 59964fb..c0a53b2 100644
--- a/project/Release.scala
+++ b/project/Release.scala
@@ -13,7 +13,7 @@ object JobServerRelease {
       homepage := Some(url("https://github.com/spark-jobserver/spark-jobserver")),
       tags in lsync := Seq("spark", "akka", "rest"),
       description in lsync := "REST job server for Apache Spark",
-      externalResolvers in lsync := Seq("Job Server Bintray" at "http://dl.bintray.com/spark-jobserver/maven"),
+      //externalResolvers in lsync := Seq("Job Server Bintray" at "http://dl.bintray.com/spark-jobserver/maven"),
       ghUser in lsync := Some("spark-jobserver"),
       ghRepo in lsync := Some("spark-jobserver"),
       ghBranch in lsync := Some("master")
diff --git a/project/plugins.sbt b/project/plugins.sbt
index 4fc9f5c..d72d6eb 100644
--- a/project/plugins.sbt
+++ b/project/plugins.sbt
@@ -12,7 +12,7 @@ addSbtPlugin("org.scalastyle" %% "scalastyle-sbt-plugin" % "0.8.0")
 
 addSbtPlugin("org.scoverage" %% "sbt-scoverage" % "1.3.5")
 
-addSbtPlugin("me.lessis" % "bintray-sbt" % "0.3.0")
+// addSbtPlugin("me.lessis" % "bintray-sbt" % "0.3.0")
 
 addSbtPlugin("me.lessis" % "ls-sbt" % "0.1.3")
 
-- 
2.4.3

