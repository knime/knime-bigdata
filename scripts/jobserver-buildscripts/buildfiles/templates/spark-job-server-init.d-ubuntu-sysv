#! /bin/sh
### BEGIN INIT INFO
# Provides:	     spark-job-server
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Spark Job Server
# Description:       Spark Job Server provides a REST interface to run Apache Spark applications.
### END INIT INFO

#
# Author: Bjoern Lohrmann <bjoern.lohrmann@knime.com>
#
# Add to boot sequence with:
# update-rc.d spark-job-server start 20 2 3 4 5 . stop 20 0 1 6 .

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Spark Job Server"
NAME=spark-job-server
SCRIPTNAME=/etc/init.d/$NAME

# installation directory of the job server
JSDIR=/opt/%JSLINKNAME%
# the Linux user under which the job server runs
USER=%JSUSER%

DAEMON_START="$JSDIR/server_start.sh"
DAEMON_STOP="$JSDIR/server_stop.sh"
LOGDIR=/var/log/%JSLINKNAME%
PIDFILE="$JSDIR/spark-jobserver.pid"

# Define LSB log_* functions.
. /lib/lsb/init-functions

do_start()
{

  for dir in "$(dirname $PIDFILE)/" "$LOGDIR"
  do
    mkdir -p "$dir"
    chown -R "$JSUSER" "$dir"
  done

  # Check if already running
  if [ -e "$PIDFILE" ] && status_of_proc -p "$PIDFILE" "$DAEMON_START" "$NAME" >/dev/null ; then
    return 1
  fi

  # Return
  #   0 if daemon has been started
  #   1 if daemon was already running
  #   other if daemon could not be started or a failure occured
  start-stop-daemon --start --exec "$DAEMON_START" --chuid "$JSUSER" --chdir "$JSDIR" --pidfile "$PIDFILE"
  ret=$?
  if [ $ret -eq 0 ] ; then
    sleep 3

    # Return
    #  0 = program is running
    #  4 = unable to determine status
    #  other if daemon is not running
    status_of_proc -p "$PIDFILE" "$DAEMON_START" "$NAME" >/dev/null
    return $?
  else
    return $ret
  fi
}

do_stop()
{
  # Return
  #  0 = program is running
  #  4 = unable to determine status
  #  other if daemon is not running
  status_of_proc -p "$PIDFILE" "$DAEMON_START" "$NAME" >/dev/null
  ret=$?

  if [ $ret -eq 0 ] ; then
    start-stop-daemon --start --exec "$DAEMON_STOP" --chuid "$JSUSER" --chdir "$JSDIR" --pidfile "$PIDFILE"
    return 0
  elif [ $ret -eq 4 ] ; then
    return 2
  else
    return 1
  fi
}

case "$1" in
  start)
  log_daemon_msg "Starting $DESC" "$NAME"
  do_start
  case "$?" in
    0) log_end_msg 0 ;;
    1) log_progress_msg "already started"
    log_end_msg 0 ;;
    *) log_end_msg 1 ;;
  esac

  ;;
  stop)
  log_daemon_msg "Stopping $DESC" "$NAME"
  do_stop
  case "$?" in
    0) log_end_msg 0 ;;
    1) log_progress_msg "already stopped"
    log_end_msg 0 ;;
    *) log_end_msg 1 ;;
  esac

  ;;
  restart|force-reload)
  $0 stop
  $0 start
  ;;
  status)
  status_of_proc -p "$PIDFILE" "$DAEMON_START" "$NAME" && exit 0 || exit $?
  ;;
  *)
  echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload|status}" >&2
  exit 3
  ;;
esac

:
