<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 2.0//EN" "http://www.knime.org/Node.dtd">
<knimeNode icon="./pythonscript.png" type="Manipulator">
	<name>Python Script (Hive) (legacy)</name>

	<shortDescription>
		Allows execution of a Python script in a local Python installation. 
	</shortDescription>

	<fullDescription>
		<intro>
            <p>
            <b>This node is part of the legacy database framework and will be
            <a href="https://www.knime.com/blog/reproducibility-and-knime">deprecated</a> at the end of 2022.</b>
            For more information on how to migrate to the new database framework see the
            <a href="https://docs.knime.com/latest/db_extension_guide/index.html#migration">migration section</a> of the 
            <a href="https://docs.knime.com/latest/db_extension_guide/index.html">database documentation</a>.
            </p>
            <p>
			Allows execution of a Python script in a local Python
			installation.
			The path to the Python executable has to be configured
			in Preferences
			→ KNIME → Python.
			</p>
		    <p>
			  <b>NOTICE:</b>
	          The nodes uses the <a href="https://pypi.python.org/pypi/JayDeBeApi/">JayDeBeApi</a> library 
	          to establish a connection to the database via a JDBC connection which his included. However to use JayDeBeApi
	          <a href="http://jpype.sourceforge.net/">JPype</a> needs to be installed. For Windows precompiled
	          libraries can be download from 
	          <a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#jpype">Unofficial Windows Binaries for Python Extension Packages</a>.
          </p>
		</intro>
		<tab name="Script">
		    <option name="Target folder">
		      A folder on the server where the temporary copy of the data is copied. The Hive server user
              needs read access to this folder.
		    </option>
			<option name="Editor">
				The script that will be executed to generate this nodes output.
				Execute
				script will execute the full script while execute selection
				will only
				execute the currently selected script.
				<br />
				<br />
				The editor optionally provides autocompletion (CTRL + Space) if the
				Python module <b>jedi</b> is installed.
			</option>
			<option name="Flow variables">
				The list contains the available flow variables. A
				double click will insert the corresponding identifier
				at the current
				cursor position in the editor.
			</option>
			<option name="Workspace">
				Lists the currently defined identifiers in the
				running Python instance. Reset workspace will remove all definitions
				and reinsert only the input data.
                <br />
                <br />
                The result of the input database query is available via the <i>db_util</i> object. For details about the
                available functions of the db_util object execute <i>db_util.print_description()</i> in the editor.
			</option>
			<option name="Console">
				Displays the standard and error output of the
				execution as well as other relevant information.
			</option>
		</tab>
		<tab name="Templates">
			<option name="Create from editor...">
				Create a new template based on the script contained in the editor of the script tab.<br/><br />Note: User defined templates can be found in the folder: <i>knime-workspace/.metadata/knime/sourcecode-templates/python-script</i>
			</option>
			<option name="Remove selected">
				Removes the selected template.<br/><br />Note: Templates provided by plugins can not be removed.
			</option>
			<option name="Apply selected">
				Replaces the script contained in the editor of the script tab with the selected template.
			</option>
		</tab>
	</fullDescription>
	<ports>
	    <inPort index="0" name="Remote connection">A connection to the remote Hive server</inPort>
		<inPort name="DB" index="1">
			The input database connection that defines the input table. In the Python script
			it is available as DBUtil under the name <i>db_util</i>.
		</inPort>
		<outPort name="DB" index="0">
			A database connection with the result table. The result table is either automatically defined by the
			DBUtil class or by the user by executing the <i>db_util.set_output_query()</i> method.
		</outPort>
	</ports>
	<views>
		<view name="Standard output" index="0">
			The text sent by Python to the standard output, during the execution of
			this node.
		</view>
		<view name="Error output" index="1">
			The text sent by Python to the error output, during the execution of
			this node.
		</view>
	</views>
</knimeNode>
