<?xml version="1.0" encoding="UTF-8"?>
<knimeNode xmlns="http://knime.org/node/v2.10" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://knime.org/node/v2.10 http://knime.org/node/v2.10" type="Source" icon="db_hive_loader.png">
    <name>Hive Loader (legacy)</name>
    <shortDescription>Loads data from KNIME into Hive</shortDescription>
    <fullDescription>
        <intro>
            <p>
            <b>This node is part of the legacy database framework.</b>
            For more information on how to migrate to the new database framework see the
            <a href="!@!TOBIS_DB_MIGRATION_DOCUMENTATION_LINK!@!">migration section</a> of the 
            <a href="!@!TOBIS_DB_DOCUMENTATION_LINK!@!">database documentation</a>.
            </p>
            <p>
            This node loads a KNIME data table into Hive. Hive requires imported data to be present on the Hive server,
            therefore this node first copies the data onto the Hive server. You can use any of the protocols supported
            by the file handling nodes, e.g. SSH/SCP or FTP. The data is then loaded into a Hive table and the uploaded
            file is deleted.
            </p>
            <p>
            Additionally the data can be partitioned by selecting one or more compatible columns (e.g. integer or
            string). The node relies on Hive's dynamic partitioning.
            </p>
        </intro>

        <option name="Target folder">
            A folder on the server where the temporary copy of the data is copied. The Hive server user
            needs read access to this folder.
        </option>
        <option name="Table name">
            The name of the new table in the database.
        </option>
        <option name="Drop existing table">
            If this option is selected, an existing table will be dropped and re-created. Otherwise the
            table
            is loaded into the existing table. Note that the import may fail in this case if the table structure
            and
            partitioning information do not match.
        </option>
        <option name="Partition columns">
            Here you can select one or more columns that should be used for partitioning the data in the
            table. A
            partitioned table requires a two-step import via a temporary table and therefore is much slower than
            import
            into an unpartitioned table.
            <br />
            NULL values or empty strings in string partition columns are placed into a special partition and
            returned as __HIVE_DEFAULT_PARTITION__ instead of NULL.
        </option>
    </fullDescription>

    <ports>
        <inPort index="0" name="Remote connection">A connection to the remote Hive server</inPort>
        <inPort index="1" name="Data">The data table that should be loaded into Hive</inPort>
        <inPort index="2" name="Hive database connection">A connection to a Hive database</inPort>
        <outPort index="0" name="Database Connection">A database connection with the imported table</outPort>
    </ports>
</knimeNode>
