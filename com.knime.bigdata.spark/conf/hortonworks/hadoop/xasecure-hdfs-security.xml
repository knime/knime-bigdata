<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
--><?xml-stylesheet type="text/xsl" href="configuration.xsl"?><configuration xmlns:xi="http://www.w3.org/2001/XInclude">

	<!--  The following property is used to select appropriate XASecure Authorizer Module (filebased, policymanager based) -->
	<property>
		<name>hdfs.authorization.verifier.classname</name>
		<value>com.xasecure.pdp.hdfs.XASecureAuthorizer</value>
		<description>
			Class Name of the authorization Module 
		</description>
	</property>

	<!-- The following properties are used only when PolicyManager is used as 
		main storage for all policy -->
	<property>
		<name>xasecure.hdfs.policymgr.url</name>
		<value>http://sandbox.hortonworks.com:6080/service/assets/policyList/sandbox_hdfs</value>
		<description>
			Location where XASecure Role Based Authorization Info is
			located.
		</description>
	</property>
	<property>
		<name>xasecure.hdfs.policymgr.url.saveAsFile</name>
		<value>/tmp/hadoop_sandbox_hdfs_json</value>
		<description>
			Location where XASecure Role Based Authorization Info is
			saved after successful retrieval from policymanager
		</description>
	</property>
	<property>
		<name>xasecure.hdfs.policymgr.url.laststoredfile</name>
		<value>/etc/ranger/sandbox_hdfs/policycache/hadoop_sandbox_hdfs_json</value>
		<description>
			Location and file where last XASecure Role Based Authorization Info
		    is saved after successful retrieval from policymanager.
		</description>
	</property>
	<property>
		<name>xasecure.hdfs.policymgr.url.reloadIntervalInMillis</name>
		<value>5000</value>
		<description>
			How often do we need to verify the changes tothe
			authorization url,
			to reload to memory (reloaded only if there are
			changes)
		</description>
	</property>
	
	<property>
		<name>xasecure.add-hadoop-authorization</name>
		<value>true</value>
		<description>
			Enable/Disable the default hadoop authorization (based on
			rwxrwxrwx permission on
			the resource) if the XASecure Authorization
			fails.
		</description>
	</property>

	<!--  The following field are used to customize the audit logging feature -->

	<!-- 
	<property>
		<name>xasecure.auditlog.fieldDelimiterString</name>
		<value>@</value>
		<description> Audit Log field delimiters </description>
	</property>
	<property>
		<name>xasecure.auditlog.xasecureAcl.name</name>
		<value>xasecure-acl</value>
		<description> The module name listed in the auditlog when the
			permission
			check is done by XASecureACL
		</description>
	</property>
	<property>
		<name>xasecure.auditlog.hadoopAcl.name</name>
		<value>hadoop-acl</value>
		<description> The module name listed in the auditlog
			when the permission check is done by HadoopACL
		</description>
	</property>
	<property>
		<name>xasecure.auditlog.accessgranted.text</name>
		<value>granted</value>
		<description> The text to be written in audit log when access is
			granted
		</description>
	</property>
	<property>
		<name>xasecure.auditlog.accessdenied.text</name>
		<value>denied</value>
		<description> The text to be written in audit log when
			access is denied
		</description>
	</property>
	<property>
		<name>xasecure.auditlog.hdfs.excludeusers</name>
		<value>hbase,hive</value>
		<description> List of comma separated users for
			whom the audit log is not written
		</description>
	</property>
	-->
	

<property>
        <name>xasecure.hdfs.policymgr.ssl.config</name>
        <value>/etc/hadoop/conf/xasecure-policymgr-ssl.xml</value>
    </property>
</configuration>
