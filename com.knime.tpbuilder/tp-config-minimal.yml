# This is a (not so) minimal starter-config tpbuilder.
#
# It comes with some batteries included, i.e. for some commonly
# used maven dependencies which are already part of KNIME (see maven blacklist)
# it will do "the right thing", which is to reuse what is there
# instead of rebundling.


############################################################
# version
############################################################
#
# version will be appended the OSGI version qualifier of all
# generated bundles where either 
#  (1) a new bundle was created (including merged bundles)
#  (2) an existing bundling was changed
version: knime-20170824


############################################################
# source
############################################################
# Global switch to control whether source bundles will be created.
# Defaults to true.
#
# source: true


############################################################
# properties
############################################################
properties:
  knime_log4j_version: 1.2.15
  knime_slf4j_version: 1.7.2
  knime_jackson_version: 2.7.1
  knime_guava_version: 19.0.0
  knime_commons_httpclient_version: 3.1.0
  knime_httpcomponents_httpclient_version: 4.3.6
  knime_httpcomponents_httpcore_version: 4.3.3
  knime_servletapi_version: 3.1.0
  knime_xerces_version: 2.9.0


############################################################
# mavenBlacklist
############################################################
#
# mavenBlacklist specifies maven artifacts that should not get bundled (nor their transitive dependencies 
# unless they are pulled in by other artifacts).
#
# Note that this blacklist only affect what gets *bundled*. It is still
# possible for other artifacts to *depend* on blacklisted artifacts. These dependencies
# must be dealt with manually:
#
#   - Case 1: The backlisted artifact is "externally provided". In this case you need to
#     specify a matching requireBundleOverride or importPackageOverride. An example is log4j, which
#     is already provided by KNIME as bundle org.apache.log4j.
#
#   - Case 2: You also want the dependencies on the blacklisted artifact to be dropped, e.g. because
#     they are test or runtime dependencies that you don't want bundled. In this case specifiy a matching entry
#     in mavenDependencyBlacklist.
mavenBlacklist:
  # Equinox/OSGI already provides these:
  - javax\.annotation:.*
  - javax\.activation:activation:jar:.*
  - javax\.xml\.bind:jaxb-api:.*
  - stax:stax-api:jar:.*
  - org\.osgi:.*

  # KNIME TP already provides these:
  - log4j:.*
  - org\.slf4j:(?!slf4j-ext).*
  - com\.fasterxml\.jackson\.core:.*
  - com\.google\.guava:guava:.*
  - commons-httpclient:commons-httpclient:jar:.*
  - org\.apache\.httpcomponents:httpclient:jar:.*
  - org\.apache\.httpcomponents:httpcore:jar:.*
  - javax\.servlet:servlet-api:jar:.*
  - javax\.servlet:javax\.servlet-api:jar:.*
  - commons-logging:commons-logging:jar:.*
  - xerces:xercesImpl:jar:.*
  
  # javax.annotation packages from jsr305  are never required at runtime
  - com\.google\.code\.findbugs:jsr305:jar:.*
  

############################################################
# mavenDependencyBlacklist
############################################################
#
# mavenDependencyBlacklist specifies maven artifacts that will be filtered out during transitive dependency.
# collection. If there is a maven dependency A -> B, and B is on this blacklist, this has the following effect:
#   - B will be dropped from B's list of dependencies (no Require-Bundle entry)
#   - B and its dependencies will not be packaged as an OSGI bundles
#
# NOTE: mavenDependencyBlacklist is best used in conjunction with mavenBlacklist (see respective documentation)
mavenDependencyBlacklist:
  # throw away maven dependencies on osgi components, because the maven artifacts that have these dependencies
  # are already OSGI bundles
  - org\.osgi:.*

  # runtime dependencies of some log4j and slf4j artifacts (they are useless anyway)
  - log4j:apache-log4j-extras:.*
  - org\.slf4j:slf4j-jdk14:.*
  - org\.slf4j:jcl-over-slf4j:.*
  - org\.slf4j:slf4j-log4j12:.*
  - org\.slf4j:jul-to-slf4j:.*
  
  # javax.annotation packages from jsr305  are never required at runtime
  - com\.google\.code\.findbugs:jsr305:jar:.*



############################################################
# requireBundleOverrides
############################################################
#
# Let's say, artifact A depends on artifact B in version 1.2.1. By default, such a maven dependency is translated 
# into a Require-Bundle clause that says bundle A depends on bundle B version range [1.2,1.3).
# Sometimes you want to override this default mechanism because you know better. Under requireBundleOverrides 
# you can specify such an override. Each override specifies... 
#   - coordPattern: a regular expression applied to the *maven* coordinate of a *maven* dependency (i.e. B in the 
#       above example)
#   - replacement: a RequireBundle clause, e.g. org.apache.log4j;bundle-version="[1.2.0,1.3.0)"
#
# NOTE: requireBundleOverrides is best used in conjunction with mavenBlacklist (see respective documentation)
#
# NOTE: The list of overrides is order sensitive. The first override whose pattern matches will be used. 
requireBundleOverrides:
  # KNIME TP already provides these:
  - coordPattern: org\.slf4j:slf4j-api:.*
    replacement: org.slf4j.api;bundle-version="${knime_slf4j_version}"
    
  - coordPattern: log4j:log4j:.*
    replacement: org.apache.log4j;bundle-version="${knime_log4j_version}"
   
  - coordPattern: com\.google\.guava:guava:jar:.*
    replacement: com.google.guava;bundle-version=${knime_guava_version}
  
  - coordPattern: commons-httpclient:commons-httpclient:jar:.*
    replacement: org.apache.commons.httpclient;bundle-version=${knime_commons_httpclient_version}
    
  - coordPattern: org.apache.httpcomponents:httpclient:jar:.*
    replacement: org.apache.httpcomponents.httpclient;bundle-version=${knime_httpcomponents_httpclient_version}

  - coordPattern: org.apache.httpcomponents:httpcore:jar:.*
    replacement: org.apache.httpcomponents.httpcore;bundle-version=${knime_httpcomponents_httpcore_version}

  - coordPattern: com\.fasterxml\.jackson\.core:([^:]*):jar:.*
    replacement: com.fasterxml.jackson.core.${1};bundle-version="${knime_jackson_version}"
    
  - coordPattern: javax\.servlet:servlet-api:jar:.*
    replacement: javax.servlet;bundle-version="${knime_servletapi_version}"
  
  - coordPattern: javax\.servlet:javax\.servlet-api:jar:.*
    replacement: javax.servlet;bundle-version="${knime_servletapi_version}"
    
  - coordPattern: xerces:xercesImpl:jar:.*
    replacement: org.apache.xerces;bundle-version="${knime_xerces_version}"
    
    
  
############################################################
# importPackageOverrides
############################################################
#
# Let's say, artifact A depends on artifact B in version 1.2.1. By default, such a maven dependency is translated 
# into a Require-Bundle clause that says bundle A depends on bundle B version range [1.2,1.3).
# Sometimes you want to override this default mechanism with an Import-Package (instead of Require-Bundle)
# because you know better.
#
# NOTE: importPackageOverrides is best used in conjunction with mavenBlacklist (see respective documentation)
importPackageOverrides:
  # OSGI already provides these because they are part of J2SE
  - coordPattern: javax\.annotation:.*
    replacement: javax.annotation.*
  
  - coordPattern: javax\.activation:activation:jar:.*
    replacement: javax.activation.*
  
  - coordPattern: javax\.xml\.bind:jaxb-api:.*
    replacement: javax.xml.bind.*
    
  - coordPattern: stax:stax-api:jar:.*
    replacement: javax.xml.*
    
  # KNIME TP provides these
  - coordPattern: commons-logging:commons-logging:jar:.*
    replacement: org.apache.commons.logging.*;version="[1.1,2)"
    


############################################################
# mavenDependencyOverrides
############################################################
#  
# Use mavenDependencyOverrides this to *redirect* maven dependencies. The intended
# usage scenario is that you redirect to maven artifacts that you actually 
# want to package as bundles (so they shouldn't be on mavenBlacklist).
#
# mavenDependencyOverrides:
#   - coordPattern: <mvn-coordinate-regex>
#     replacement: <mvn-coordinate>

  
############################################################
# duplicateRemovalBlacklist
############################################################
#  
# duplicateRemovalBlacklist Prevents artifacts that only differ in their micro version from undergoing
# duplicate removal.
#
# duplicateRemovalBlacklist:
#  - <mvn-coordinate-regex>
  

############################################################
# mavenRepositories
############################################################
#  
# Specifies a list of maven repositories to consult when locating maven artifacts.
#
# mavenRepositories:
#   - id: <a-unique-name>
#     url: <HTTP-URL-of-repo>


############################################################
# mavenRepositories
############################################################
#  
# Specifies file excludes and bnd instructions for maven artifacts.
#
# bundleInstructions
#   - coordPattern: <mvn-coordinate-regex>
#     fileExcludes:
#       - <wildcard-string>
#     instructions:
#       bnd-instruction: <instruction-value>


############################################################
# artifactGroups
############################################################
#  
# Specifies the artifacts that are supposed to be bundled.
# Notes:
#   - artifacts are grouped only for display/usability purposes
#   - multiArtifacts allows to more easily bundle artifacts of the same group
#   - transitiveSourceDepth=X is only used when source=true.
#     - X=0 means that only the artifact itself will get a source bundle
#     - X=1 means that the artifact itself and its immediate dependencies will get a source bundle
#     - X=2 means that the artifact itself, its immediate dependencies as well as their immediate dependencies will get a source bundle
#     - (... and so on...)
#     - X=-1 means that the artifact itself and all its transitive dependencies will get a source bundle
#      
#
# artifactGroups:
#   - name: <custom-artififact-group-name>
#     multiArtifacts:
#       - group: <artifact-group>
#         version: <artifact-version>
#         [source: true|false (default is taken from top-level source attribute)]
#         [transitive: true|false (true is default)]
#         [transitiveSourceDepth: <number> (0 is default)]
#         artifacts:
#           - <artifact-id>
#     singleArtifacts:
#       - id: <maven-coordinate>
#         [source: true|false (default is taken from top-level source attribute)]
#         [transitive: true|false (true is default)]
#         [transitiveSourceDepth: <number> (0 is default)]
#
