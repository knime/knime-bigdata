<?xml version="1.0" encoding="utf-8"?>
<knimeNode icon="icon.png" type="Manipulator" xmlns="http://knime.org/node/v3.6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v3.6 http://knime.org/node/v3.6.xsd">
    <name>Spark Joiner</name>
    <shortDescription>Joins two Spark DataFrame/RDDs</shortDescription>
    <fullDescription>
        <intro>
            This node joins two Spark DataFrame/RDDs in a database-like way. The join is based 
            on the joining columns of both DataFrame/RDDs.
        </intro>
        <tab name="Joiner settings">
            <option name="Join mode">
                If a row from the top DataFrame/RDD cannot be joined with a row from the bottom DataFrame/RDD (and vice versa) there are
                several options of handling this situation. After an
                <b>Inner Join</b>
                only matching rows will show up in the output DataFrame/RDD. A
                <b>Left Outer Join</b>
                will fill up the columns that come from the bottom DataFrame/RDD with missing values if no matching row exists in
                the bottom DataFrame/RDD. Likewise, a
                <b>Right Outer Join</b>
                will fill up the columns from the top DataFrame/RDD with missing values if no matching row in the top DataFrame/RDD
                exists. A
                <b>Full Outer Join</b>
                will fill up columns from both the top and bottom DataFrame/RDD with missing values if a row cannot be joined.
            </option>        
            <option name="Joining columns">
                 Select the columns from the top input ('left' table) and the bottom input 
                ('right' table) that should be used for joining. You must make sure, that the type 
                of selected columns matches.
                <br/>
                <b>Match all of the following:</b> 
                A row of the top input DataFrame/RDD and a row of the bottom input DataFrame/RDD 
                match if they match in all specified column pairs.
                <br/>
                <b>Match any of the following:</b>
                A row of the top input table and a row of the bottom input DataFrame/RDD 
                match if they match in at least one specified column pairs.            
            </option>        
        </tab>
        <tab name="Column selection">
            <option name="Column Selection (Top Input ('left' table) and Bottom Input ('right' table))">
                <br/>
                <b>Include:</b> This list contains the names of those columns in the input Spark
                DataFrame/RDD to be included.
                <br/>
                <b>Exclude:</b> This list contains the names of the columns in the input Spark
                DataFrame/RDD to be excluded.
                <br/>
				<b>Filter:</b> Use one of these fields to filter either the Include or Exclude
                list for certain column names or name substrings.
                <b>Buttons:</b> Use these buttons to move columns between the Include and Exclude 
                list. Single-arrow buttons will move all selected columns.
                Double-arrow buttons will move all columns (filtering is taken into
                account).
                <br/>
                <br/>
                <b>Always include all columns:</b> If set, all columns are moved to
                the include list and if input changes all new columns will be in the 
                include list, too.
            </option>        
            <option name="Duplicate column handling">
                The option allows you to change the behaviour if the include
                lists of both input DataFrame/RDDs contain columns with the same name. 
                <br/>
                <b>Filter duplicates:</b> Only the columns from the top input DataFrame/RDD
                will show up in the output DataFrame/RDD.
                <br/>
                <b>Don't execute:</b> Don't allow to execute this node if there are
                duplicate column names in the include lists. 
                <br/>
                <b>Append suffix:</b> Append a suffix to the duplicate column names
                from the bottom input DataFrame/RDD so that they also show up in the output
                DataFrame/RDD.
            </option>
            <option name="Joining columns handling">
                The option allows filtering the top/bottom joining columns, i.e. the
                joining columns defined in the Joiner Settings tab will not show up
                in the output DataFrame/RDD.
            </option>
        </tab>

    </fullDescription>
    <ports>
        <inPort index="0" name="Top Input ('left' table)">DataFrame/RDD contributing to the left part of the output DataFrame/RDD</inPort>
        <inPort index="1" name="Bottom Input ('right table)">DataFrame/RDD contributing to the right part of the output DataFrame/RDD</inPort>
        <outPort index="0" name="Joined DataFrame/RDD">Joined DataFrame/RDD</outPort>
    </ports>
</knimeNode>
